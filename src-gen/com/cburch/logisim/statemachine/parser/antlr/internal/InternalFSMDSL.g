/*
 * generated by Xtext
 */
grammar InternalFSMDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.cburch.logisim.statemachine.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.cburch.logisim.statemachine.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.cburch.logisim.statemachine.services.FSMDSLGrammarAccess;

}

@parser::members {

 	private FSMDSLGrammarAccess grammarAccess;
 	
    public InternalFSMDSLParser(TokenStream input, FSMDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "TOP";	
   	}
   	
   	@Override
   	protected FSMDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTOP
entryRuleTOP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTOPRule()); }
	 iv_ruleTOP=ruleTOP 
	 { $current=$iv_ruleTOP.current; } 
	 EOF 
;

// Rule TOP
ruleTOP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTOPAccess().getFSMParserRuleCall_0()); 
    }
    this_FSM_0=ruleFSM
    { 
        $current = $this_FSM_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTOPAccess().getConstantDefListParserRuleCall_1()); 
    }
    this_ConstantDefList_1=ruleConstantDefList
    { 
        $current = $this_ConstantDefList_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTOPAccess().getCommandStmtParserRuleCall_2()); 
    }
    this_CommandStmt_2=ruleCommandStmt
    { 
        $current = $this_CommandStmt_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTOPAccess().getPredicateStmtParserRuleCall_3()); 
    }
    this_PredicateStmt_3=rulePredicateStmt
    { 
        $current = $this_PredicateStmt_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCommandStmt
entryRuleCommandStmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandStmtRule()); }
	 iv_ruleCommandStmt=ruleCommandStmt 
	 { $current=$iv_ruleCommandStmt.current; } 
	 EOF 
;

// Rule CommandStmt
ruleCommandStmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCommandStmtAccess().getLeftSquareBracketKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getCstConstantDefParserRuleCall_1_0_0()); 
	    }
		lv_cst_1_0=ruleConstantDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"cst",
        		lv_cst_1_0, 
        		"ConstantDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCommandStmtAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getCstConstantDefParserRuleCall_1_1_1_0()); 
	    }
		lv_cst_3_0=ruleConstantDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"cst",
        		lv_cst_3_0, 
        		"ConstantDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCommandStmtAccess().getRightSquareBracketKeyword_2());
    }
	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCommandStmtAccess().getLeftSquareBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getInShortInputPortParserRuleCall_4_0_0()); 
	    }
		lv_in_6_0=ruleShortInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_6_0, 
        		"ShortInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCommandStmtAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getInShortInputPortParserRuleCall_4_1_1_0()); 
	    }
		lv_in_8_0=ruleShortInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_8_0, 
        		"ShortInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCommandStmtAccess().getRightSquareBracketKeyword_5());
    }
	otherlv_10='[' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCommandStmtAccess().getLeftSquareBracketKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getOutShortOutputPortParserRuleCall_7_0_0()); 
	    }
		lv_out_11_0=ruleShortOutputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"out",
        		lv_out_11_0, 
        		"ShortOutputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCommandStmtAccess().getCommaKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getOutShortOutputPortParserRuleCall_7_1_1_0()); 
	    }
		lv_out_13_0=ruleShortOutputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"out",
        		lv_out_13_0, 
        		"ShortOutputPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_14=']' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCommandStmtAccess().getRightSquareBracketKeyword_8());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getCommandsCommandParserRuleCall_9_0_0()); 
	    }
		lv_commands_15_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_15_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=';' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCommandStmtAccess().getSemicolonKeyword_9_1());
    }
)?)((
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getCommandsCommandParserRuleCall_10_0_0()); 
	    }
		lv_commands_17_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_17_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=';' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCommandStmtAccess().getSemicolonKeyword_10_1());
    }
)?)*)
;





// Entry rule entryRuleConstantDefList
entryRuleConstantDefList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantDefListRule()); }
	 iv_ruleConstantDefList=ruleConstantDefList 
	 { $current=$iv_ruleConstantDefList.current; } 
	 EOF 
;

// Rule ConstantDefList
ruleConstantDefList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getConstantDefListAccess().getConstantsConstantDefParserRuleCall_0_0_0()); 
	    }
		lv_constants_0_0=ruleConstantDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantDefListRule());
	        }
       		add(
       			$current, 
       			"constants",
        		lv_constants_0_0, 
        		"ConstantDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantDefListAccess().getSemicolonKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantDefListAccess().getConstantsConstantDefParserRuleCall_0_1_1_0()); 
	    }
		lv_constants_2_0=ruleConstantDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantDefListRule());
	        }
       		add(
       			$current, 
       			"constants",
        		lv_constants_2_0, 
        		"ConstantDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantDefListAccess().getSemicolonKeyword_1());
    }
)?
;





// Entry rule entryRulePredicateStmt
entryRulePredicateStmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredicateStmtRule()); }
	 iv_rulePredicateStmt=rulePredicateStmt 
	 { $current=$iv_rulePredicateStmt.current; } 
	 EOF 
;

// Rule PredicateStmt
rulePredicateStmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPredicateStmtAccess().getLeftSquareBracketKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateStmtAccess().getCstConstantDefParserRuleCall_1_0_0()); 
	    }
		lv_cst_1_0=ruleConstantDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateStmtRule());
	        }
       		add(
       			$current, 
       			"cst",
        		lv_cst_1_0, 
        		"ConstantDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPredicateStmtAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateStmtAccess().getCstConstantDefParserRuleCall_1_1_1_0()); 
	    }
		lv_cst_3_0=ruleConstantDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateStmtRule());
	        }
       		add(
       			$current, 
       			"cst",
        		lv_cst_3_0, 
        		"ConstantDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPredicateStmtAccess().getRightSquareBracketKeyword_2());
    }
	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPredicateStmtAccess().getLeftSquareBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateStmtAccess().getInShortInputPortParserRuleCall_4_0_0()); 
	    }
		lv_in_6_0=ruleShortInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateStmtRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_6_0, 
        		"ShortInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPredicateStmtAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateStmtAccess().getInShortInputPortParserRuleCall_4_1_1_0()); 
	    }
		lv_in_8_0=ruleShortInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateStmtRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_8_0, 
        		"ShortInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPredicateStmtAccess().getRightSquareBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateStmtAccess().getPredicatePredicateParserRuleCall_6_0()); 
	    }
		lv_predicate_10_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateStmtRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_10_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPredicateStmtAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleFSM
entryRuleFSM returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFSMRule()); }
	 iv_ruleFSM=ruleFSM 
	 { $current=$iv_ruleFSM.current; } 
	 EOF 
;

// Rule FSM
ruleFSM returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFSMAccess().getFSMAction_0(),
            $current);
    }
)(	otherlv_1='fsm' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFSMAccess().getFsmKeyword_1_0());
    }

    |	otherlv_2='state_machine' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFSMAccess().getState_machineKeyword_1_1());
    }
)(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getFSMAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFSMRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getLayoutLayoutInfoParserRuleCall_3_0()); 
	    }
		lv_layout_4_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_4_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFSMAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getConstantsConstantDefParserRuleCall_5_0_0()); 
	    }
		lv_constants_6_0=ruleConstantDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		add(
       			$current, 
       			"constants",
        		lv_constants_6_0, 
        		"ConstantDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFSMAccess().getSemicolonKeyword_5_1());
    }
)*((	otherlv_8='in' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFSMAccess().getInKeyword_6_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getInInputPortParserRuleCall_6_0_1_0()); 
	    }
		lv_in_9_0=ruleInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_9_0, 
        		"InputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
    |(	otherlv_10='out' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFSMAccess().getOutKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getOutOutputPortParserRuleCall_6_1_1_0()); 
	    }
		lv_out_11_0=ruleOutputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		add(
       			$current, 
       			"out",
        		lv_out_11_0, 
        		"OutputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)+))+(	otherlv_12='codeWidth' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFSMAccess().getCodeWidthKeyword_7_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFSMAccess().getEqualsSignKeyword_7_1());
    }
(
(
		lv_width_14_0=RULE_INT
		{
			newLeafNode(lv_width_14_0, grammarAccess.getFSMAccess().getWidthINTTerminalRuleCall_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFSMRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_14_0, 
        		"INT");
	    }

)
)	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFSMAccess().getSemicolonKeyword_7_3());
    }
)(	otherlv_16='reset' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getFSMAccess().getResetKeyword_8_0());
    }
	otherlv_17='=' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFSMAccess().getEqualsSignKeyword_8_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFSMRule());
	        }
        }
	otherlv_18=RULE_ID
	{
		newLeafNode(otherlv_18, grammarAccess.getFSMAccess().getStartStateCrossReference_8_2_0()); 
	}

)
)	otherlv_19=';' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getFSMAccess().getSemicolonKeyword_8_3());
    }
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getStatesLongStateParserRuleCall_9_0_0()); 
	    }
		lv_states_20_1=ruleLongState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_20_1, 
        		"LongState");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getStatesShortStateParserRuleCall_9_0_1()); 
	    }
		lv_states_20_2=ruleShortState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_20_2, 
        		"ShortState");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getFSMAccess().getRightCurlyBracketKeyword_10());
    }
)
;









// Entry rule entryRuleShortInputPort
entryRuleShortInputPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShortInputPortRule()); }
	 iv_ruleShortInputPort=ruleShortInputPort 
	 { $current=$iv_ruleShortInputPort.current; } 
	 EOF 
;

// Rule ShortInputPort
ruleShortInputPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getShortInputPortAccess().getInputPortAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getShortInputPortAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortInputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShortInputPortAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		lv_width_3_0=RULE_INT
		{
			newLeafNode(lv_width_3_0, grammarAccess.getShortInputPortAccess().getWidthINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortInputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_3_0, 
        		"INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getShortInputPortAccess().getRightSquareBracketKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleShortOutputPort
entryRuleShortOutputPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShortOutputPortRule()); }
	 iv_ruleShortOutputPort=ruleShortOutputPort 
	 { $current=$iv_ruleShortOutputPort.current; } 
	 EOF 
;

// Rule ShortOutputPort
ruleShortOutputPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getShortOutputPortAccess().getOutputPortAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getShortOutputPortAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortOutputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShortOutputPortAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		lv_width_3_0=RULE_INT
		{
			newLeafNode(lv_width_3_0, grammarAccess.getShortOutputPortAccess().getWidthINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortOutputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_3_0, 
        		"INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getShortOutputPortAccess().getRightSquareBracketKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleInputPort
entryRuleInputPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputPortRule()); }
	 iv_ruleInputPort=ruleInputPort 
	 { $current=$iv_ruleInputPort.current; } 
	 EOF 
;

// Rule InputPort
ruleInputPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputPortAccess().getInputPortAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInputPortAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInputPortAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		lv_width_3_0=RULE_INT
		{
			newLeafNode(lv_width_3_0, grammarAccess.getInputPortAccess().getWidthINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_3_0, 
        		"INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInputPortAccess().getRightSquareBracketKeyword_2_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInputPortAccess().getLayoutLayoutInfoParserRuleCall_3_0()); 
	    }
		lv_layout_5_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputPortRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_5_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInputPortAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleOutputPort
entryRuleOutputPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputPortRule()); }
	 iv_ruleOutputPort=ruleOutputPort 
	 { $current=$iv_ruleOutputPort.current; } 
	 EOF 
;

// Rule OutputPort
ruleOutputPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOutputPortAccess().getOutputPortAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getOutputPortAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutputPortAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		lv_width_3_0=RULE_INT
		{
			newLeafNode(lv_width_3_0, grammarAccess.getOutputPortAccess().getWidthINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_3_0, 
        		"INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOutputPortAccess().getRightSquareBracketKeyword_2_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPortAccess().getLayoutLayoutInfoParserRuleCall_3_0()); 
	    }
		lv_layout_5_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPortRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_5_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOutputPortAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleCommandList
entryRuleCommandList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandListRule()); }
	 iv_ruleCommandList=ruleCommandList 
	 { $current=$iv_ruleCommandList.current; } 
	 EOF 
;

// Rule CommandList
ruleCommandList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCommandListAccess().getCommandListAction_0(),
            $current);
    }
)(	otherlv_1='commands' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommandListAccess().getCommandsKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandListAccess().getLayoutLayoutInfoParserRuleCall_1_1_0()); 
	    }
		lv_layout_2_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandListRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_2_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCommandListAccess().getLeftCurlyBracketKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandListAccess().getCommandsCommandParserRuleCall_1_3_0()); 
	    }
		lv_commands_4_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandListRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_4_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCommandListAccess().getRightCurlyBracketKeyword_1_4());
    }
))
;





// Entry rule entryRuleLayoutInfo
entryRuleLayoutInfo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLayoutInfoRule()); }
	 iv_ruleLayoutInfo=ruleLayoutInfo 
	 { $current=$iv_ruleLayoutInfo.current; } 
	 EOF 
;

// Rule LayoutInfo
ruleLayoutInfo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLayoutInfoAccess().getLayoutInfoAction_0(),
            $current);
    }
)(	otherlv_1='@' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLayoutInfoAccess().getCommercialAtKeyword_1_0());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLayoutInfoAccess().getLeftSquareBracketKeyword_1_1());
    }
(
(
		lv_x_3_0=RULE_INT
		{
			newLeafNode(lv_x_3_0, grammarAccess.getLayoutInfoAccess().getXINTTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLayoutInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"x",
        		lv_x_3_0, 
        		"INT");
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLayoutInfoAccess().getCommaKeyword_1_3());
    }
(
(
		lv_y_5_0=RULE_INT
		{
			newLeafNode(lv_y_5_0, grammarAccess.getLayoutInfoAccess().getYINTTerminalRuleCall_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLayoutInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"y",
        		lv_y_5_0, 
        		"INT");
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLayoutInfoAccess().getCommaKeyword_1_5_0());
    }
(
(
		lv_width_7_0=RULE_INT
		{
			newLeafNode(lv_width_7_0, grammarAccess.getLayoutInfoAccess().getWidthINTTerminalRuleCall_1_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLayoutInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_7_0, 
        		"INT");
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLayoutInfoAccess().getCommaKeyword_1_5_2());
    }
(
(
		lv_height_9_0=RULE_INT
		{
			newLeafNode(lv_height_9_0, grammarAccess.getLayoutInfoAccess().getHeightINTTerminalRuleCall_1_5_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLayoutInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"height",
        		lv_height_9_0, 
        		"INT");
	    }

)
))?	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLayoutInfoAccess().getRightSquareBracketKeyword_1_6());
    }
)?)
;





// Entry rule entryRuleLongState
entryRuleLongState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLongStateRule()); }
	 iv_ruleLongState=ruleLongState 
	 { $current=$iv_ruleLongState.current; } 
	 EOF 
;

// Rule LongState
ruleLongState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLongStateAccess().getStateAction_0(),
            $current);
    }
)	otherlv_1='state' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLongStateAccess().getStateKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getLongStateAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLongStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLongStateAccess().getEqualsSignKeyword_3_0());
    }
(
(
		lv_code_4_0=RULE_BIN
		{
			newLeafNode(lv_code_4_0, grammarAccess.getLongStateAccess().getCodeBINTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLongStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_4_0, 
        		"BIN");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getLongStateAccess().getLayoutLayoutInfoParserRuleCall_4_0()); 
	    }
		lv_layout_5_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongStateRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_5_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLongStateAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongStateAccess().getCommandListCommandListParserRuleCall_6_0()); 
	    }
		lv_commandList_7_0=ruleCommandList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongStateRule());
	        }
       		set(
       			$current, 
       			"commandList",
        		lv_commandList_7_0, 
        		"CommandList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_8='transitions' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLongStateAccess().getTransitionsKeyword_7_0());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLongStateAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongStateAccess().getTransitionDotTransitionParserRuleCall_7_2_0()); 
	    }
		lv_transition_10_0=ruleDotTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongStateRule());
	        }
       		add(
       			$current, 
       			"transition",
        		lv_transition_10_0, 
        		"DotTransition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLongStateAccess().getRightCurlyBracketKeyword_7_3());
    }
)?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLongStateAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleShortState
entryRuleShortState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShortStateRule()); }
	 iv_ruleShortState=ruleShortState 
	 { $current=$iv_ruleShortState.current; } 
	 EOF 
;

// Rule ShortState
ruleShortState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='state' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getShortStateAccess().getStateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getShortStateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShortStateAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		lv_code_3_0=RULE_BIN
		{
			newLeafNode(lv_code_3_0, grammarAccess.getShortStateAccess().getCodeBINTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_3_0, 
        		"BIN");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getShortStateAccess().getRightSquareBracketKeyword_2_2());
    }
)?	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getShortStateAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShortStateAccess().getLayoutLayoutInfoParserRuleCall_4_0()); 
	    }
		lv_layout_6_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShortStateRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_6_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getShortStateAccess().getCommandListShortCommandListParserRuleCall_5_0()); 
	    }
		lv_commandList_7_0=ruleShortCommandList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShortStateRule());
	        }
       		set(
       			$current, 
       			"commandList",
        		lv_commandList_7_0, 
        		"ShortCommandList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getShortStateAccess().getTransitionGotoTransitionParserRuleCall_6_0()); 
	    }
		lv_transition_8_0=ruleGotoTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShortStateRule());
	        }
       		add(
       			$current, 
       			"transition",
        		lv_transition_8_0, 
        		"GotoTransition");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleShortCommandList
entryRuleShortCommandList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShortCommandListRule()); }
	 iv_ruleShortCommandList=ruleShortCommandList 
	 { $current=$iv_ruleShortCommandList.current; } 
	 EOF 
;

// Rule ShortCommandList
ruleShortCommandList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getShortCommandListAccess().getCommandListAction_0(),
            $current);
    }
)(	otherlv_1='set' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getShortCommandListAccess().getSetKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShortCommandListAccess().getCommandsCommandParserRuleCall_1_1_0()); 
	    }
		lv_commands_2_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShortCommandListRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_2_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getShortCommandListAccess().getLayoutLayoutInfoParserRuleCall_1_2_0()); 
	    }
		lv_layout_3_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShortCommandListRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_3_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleGotoTransition
entryRuleGotoTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGotoTransitionRule()); }
	 iv_ruleGotoTransition=ruleGotoTransition 
	 { $current=$iv_ruleGotoTransition.current; } 
	 EOF 
;

// Rule GotoTransition
ruleGotoTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='goto' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGotoTransitionAccess().getGotoKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGotoTransitionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getGotoTransitionAccess().getDstStateCrossReference_1_0()); 
	}

)
)(	otherlv_2='when' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGotoTransitionAccess().getWhenKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGotoTransitionAccess().getPredicatePredicateParserRuleCall_2_1_0()); 
	    }
		lv_predicate_3_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGotoTransitionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getGotoTransitionAccess().getLayoutLayoutInfoParserRuleCall_3_0()); 
	    }
		lv_layout_4_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGotoTransitionRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_4_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGotoTransitionAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleDotTransition
entryRuleDotTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDotTransitionRule()); }
	 iv_ruleDotTransition=ruleDotTransition 
	 { $current=$iv_ruleDotTransition.current; } 
	 EOF 
;

// Rule DotTransition
ruleDotTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDotTransitionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getDotTransitionAccess().getSrcStateCrossReference_0_0_0()); 
	}

)
)?	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDotTransitionAccess().getHyphenMinusGreaterThanSignKeyword_0_1());
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDotTransitionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getDotTransitionAccess().getDstStateCrossReference_1_0()); 
	}

)
)(	otherlv_3='when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDotTransitionAccess().getWhenKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDotTransitionAccess().getPredicatePredicateParserRuleCall_2_1_0()); 
	    }
		lv_predicate_4_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotTransitionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_4_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getDotTransitionAccess().getLayoutLayoutInfoParserRuleCall_3_0()); 
	    }
		lv_layout_5_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDotTransitionRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_5_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDotTransitionAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	 iv_ruleCommand=ruleCommand 
	 { $current=$iv_ruleCommand.current; } 
	 EOF 
;

// Rule Command
ruleCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommandRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getCommandAccess().getNameOutputPortCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommandAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandAccess().getValueOrParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Or");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCommandAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleConcatExpr
entryRuleConcatExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcatExprRule()); }
	 iv_ruleConcatExpr=ruleConcatExpr 
	 { $current=$iv_ruleConcatExpr.current; } 
	 EOF 
;

// Rule ConcatExpr
ruleConcatExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConcatExprAccess().getConcatExprAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConcatExprAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatExprAccess().getArgsOrParserRuleCall_2_0()); 
	    }
		lv_args_2_0=ruleOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatExprRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_2_0, 
        		"Or");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConcatExprAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatExprAccess().getArgsOrParserRuleCall_3_1_0()); 
	    }
		lv_args_4_0=ruleOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatExprRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_4_0, 
        		"Or");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConcatExprAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePortRef
entryRulePortRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortRefRule()); }
	 iv_rulePortRef=rulePortRef 
	 { $current=$iv_rulePortRef.current; } 
	 EOF 
;

// Rule PortRef
rulePortRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPortRefAccess().getPortRefAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortRefRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getPortRefAccess().getPortPortCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPortRefAccess().getRangeRangeParserRuleCall_2_0()); 
	    }
		lv_range_2_0=ruleRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortRefRule());
	        }
       		set(
       			$current, 
       			"range",
        		lv_range_2_0, 
        		"Range");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleConstRef
entryRuleConstRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstRefRule()); }
	 iv_ruleConstRef=ruleConstRef 
	 { $current=$iv_ruleConstRef.current; } 
	 EOF 
;

// Rule ConstRef
ruleConstRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstRefAccess().getConstRefAction_0(),
            $current);
    }
)	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstRefAccess().getNumberSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstRefRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getConstRefAccess().getConstConstantDefCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	 iv_ruleRange=ruleRange 
	 { $current=$iv_ruleRange.current; } 
	 EOF 
;

// Rule Range
ruleRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeAccess().getLeftSquareBracketKeyword_0());
    }
((
(
		lv_ub_1_0=RULE_INT
		{
			newLeafNode(lv_ub_1_0, grammarAccess.getRangeAccess().getUbINTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ub",
        		lv_ub_1_0, 
        		"INT");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRangeAccess().getColonKeyword_1_1());
    }
)?(
(
		lv_lb_3_0=RULE_INT
		{
			newLeafNode(lv_lb_3_0, grammarAccess.getRangeAccess().getLbINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lb",
        		lv_lb_3_0, 
        		"INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRangeAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	 iv_rulePredicate=rulePredicate 
	 { $current=$iv_rulePredicate.current; } 
	 EOF 
;

// Rule Predicate
rulePredicate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPredicateAccess().getDefaultParserRuleCall_0()); 
    }
    this_Default_0=ruleDefault
    { 
        $current = $this_Default_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPredicateAccess().getOrParserRuleCall_1()); 
    }
    this_Or_1=ruleOr
    { 
        $current = $this_Or_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefault
entryRuleDefault returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultRule()); }
	 iv_ruleDefault=ruleDefault 
	 { $current=$iv_ruleDefault.current; } 
	 EOF 
;

// Rule Default
ruleDefault returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDefaultAccess().getDefaultPredicateAction_0(),
            $current);
    }
)	otherlv_1='default' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefaultAccess().getDefaultKeyword_1());
    }
)
;





// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	 iv_ruleOr=ruleOr 
	 { $current=$iv_ruleOr.current; } 
	 EOF 
;

// Rule Or
ruleOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
    }
    this_And_0=ruleAnd
    { 
        $current = $this_And_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getOrAccess().getOrExprArgsAction_1_0(),
            $current);
    }
)	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrAccess().getPlusSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrAccess().getArgsAndParserRuleCall_1_2_0()); 
	    }
		lv_args_3_0=ruleAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"And");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	 iv_ruleAnd=ruleAnd 
	 { $current=$iv_ruleAnd.current; } 
	 EOF 
;

// Rule And
ruleAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAndAccess().getCmpParserRuleCall_0()); 
    }
    this_Cmp_0=ruleCmp
    { 
        $current = $this_Cmp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getAndAccess().getAndExprArgsAction_1_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAndAccess().getFullStopKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAndAccess().getArgsCmpParserRuleCall_1_2_0()); 
	    }
		lv_args_3_0=ruleCmp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"Cmp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleCmp
entryRuleCmp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCmpRule()); }
	 iv_ruleCmp=ruleCmp 
	 { $current=$iv_ruleCmp.current; } 
	 EOF 
;

// Rule Cmp
ruleCmp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCmpAccess().getPrimaryParserRuleCall_0()); 
    }
    this_Primary_0=rulePrimary
    { 
        $current = $this_Primary_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getCmpAccess().getCmpExprArgsAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'==' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getCmpAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCmpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'/=' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getCmpAccess().getOpSolidusEqualsSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCmpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCmpAccess().getArgsPrimaryParserRuleCall_1_2_0()); 
	    }
		lv_args_3_0=rulePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCmpRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"Primary");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	 iv_rulePrimary=rulePrimary 
	 { $current=$iv_rulePrimary.current; } 
	 EOF 
;

// Rule Primary
rulePrimary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getOrParserRuleCall_0_1()); 
    }
    this_Or_1=ruleOr
    { 
        $current = $this_Or_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getConstantParserRuleCall_1()); 
    }
    this_Constant_3=ruleConstant
    { 
        $current = $this_Constant_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getNotParserRuleCall_2()); 
    }
    this_Not_4=ruleNot
    { 
        $current = $this_Not_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getConcatExprParserRuleCall_3()); 
    }
    this_ConcatExpr_5=ruleConcatExpr
    { 
        $current = $this_ConcatExpr_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getPortRefParserRuleCall_4()); 
    }
    this_PortRef_6=rulePortRef
    { 
        $current = $this_PortRef_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getConstRefParserRuleCall_5()); 
    }
    this_ConstRef_7=ruleConstRef
    { 
        $current = $this_ConstRef_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	 iv_ruleNot=ruleNot 
	 { $current=$iv_ruleNot.current; } 
	 EOF 
;

// Rule Not
ruleNot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNotAccess().getNotExprAction_0(),
            $current);
    }
)	otherlv_1='/' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNotAccess().getSolidusKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNotAccess().getArgsPrimaryParserRuleCall_2_0()); 
	    }
		lv_args_2_0=rulePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_2_0, 
        		"Primary");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstantAccess().getConstantAction_0(),
            $current);
    }
)(
(
(
		lv_value_1_1=RULE_BIN
		{
			newLeafNode(lv_value_1_1, grammarAccess.getConstantAccess().getValueBINTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_1, 
        		"BIN");
	    }

    |		lv_value_1_2=RULE_HEX
		{
			newLeafNode(lv_value_1_2, grammarAccess.getConstantAccess().getValueHEXTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_2, 
        		"HEX");
	    }

)

)
))
;





// Entry rule entryRuleConstantDef
entryRuleConstantDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantDefRule()); }
	 iv_ruleConstantDef=ruleConstantDef 
	 { $current=$iv_ruleConstantDef.current; } 
	 EOF 
;

// Rule ConstantDef
ruleConstantDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='define' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstantDefAccess().getDefineKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstantDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstantDefAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantDefAccess().getValueConstantParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantDefRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





RULE_BIN : '"' ('0'|'1')+ '"';

RULE_HEX : '0x' ('0'..'9'|'A'..'F'|'a'..'f')+ '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


